apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: app
    spec:
      containers:
        - name: app
          image: dilyara4949/flight-book:latest
          env:
            - name: ACCESS_TOKEN_EXPIRE
              valueFrom:
                configMapKeyRef:
                  key: ACCESS_TOKEN_EXPIRE
                  name: local-env
            - name: ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: ADDRESS
                  name: local-env
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: ENVIRONMENT
                  name: local-env
            - name: HEADER_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: HEADER_TIMEOUT
                  name: local-env
            - name: JWT_TOKEN_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_TOKEN_SECRET
                  name: local-env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: local-env
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: local-env
            - name: POSTGRES_MAX_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_MAX_CONNECTIONS
                  name: local-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: local-env
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: local-env
            - name: POSTGRES_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_TIMEOUT
                  name: local-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: local-env
            - name: REDIS_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: REDIS_DATABASE
                  name: local-env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: local-env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: local-env
            - name: REDIS_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  key: REDIS_POOL_SIZE
                  name: local-env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: local-env
            - name: REDIS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_TIMEOUT
                  name: local-env
            - name: REDIS_TTL
              valueFrom:
                configMapKeyRef:
                  key: REDIS_TTL
                  name: local-env
            - name: REST_PORT
              valueFrom:
                configMapKeyRef:
                  key: REST_PORT
                  name: local-env
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always

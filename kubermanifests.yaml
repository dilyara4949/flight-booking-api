---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: app
  name: app
spec:
  type: NodePort
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: app

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgres

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: app
    spec:
      containers:
        - name: app
          image: dilyara4949/flight-booking-image
        - env:
            - name: ACCESS_TOKEN_EXPIRE
              valueFrom:
                configMapKeyRef:
                  key: ACCESS_TOKEN_EXPIRE
                  name: local-env
            - name: ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: ADDRESS
                  name: local-env
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: ENVIRONMENT
                  name: local-env
            - name: HEADER_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: HEADER_TIMEOUT
                  name: local-env
            - name: JWT_TOKEN_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_TOKEN_SECRET
                  name: local-env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: local-env
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: local-env
            - name: POSTGRES_MAX_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_MAX_CONNECTIONS
                  name: local-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: local-env
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: local-env
            - name: POSTGRES_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_TIMEOUT
                  name: local-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: local-env
            - name: REDIS_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: REDIS_DATABASE
                  name: local-env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: local-env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: local-env
            - name: REDIS_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  key: REDIS_POOL_SIZE
                  name: local-env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: local-env
            - name: REDIS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_TIMEOUT
                  name: local-env
            - name: REDIS_TTL
              valueFrom:
                configMapKeyRef:
                  key: REDIS_TTL
                  name: local-env
            - name: REST_PORT
              valueFrom:
                configMapKeyRef:
                  key: REST_PORT
                  name: local-env
          image: app
          name: app
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always

---
apiVersion: v1
data:
  ACCESS_TOKEN_EXPIRE: "877"
  ADDRESS: 0.0.0.0
  ENVIRONMENT: local
  HEADER_TIMEOUT: 5s
  JWT_TOKEN_SECRET: my_secret_key
  POSTGRES_DB: postgres
  POSTGRES_HOST: postgres
  POSTGRES_MAX_CONNECTIONS: "20"
  POSTGRES_PASSWORD: "12345"
  POSTGRES_PORT: "5432"
  POSTGRES_TIMEOUT: "30"
  POSTGRES_USER: postgres
  REDIS_DATABASE: "0"
  REDIS_HOST: redis
  REDIS_PASSWORD: "12345"
  REDIS_POOL_SIZE: "10"
  REDIS_PORT: "6379"
  REDIS_TIMEOUT: "10"
  REDIS_TTL: "5"
  REST_PORT: "8080"
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: app-local-env
  name: local-env

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD
              value: "12345"
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: postgres-data
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubermanifests.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: redis
    spec:
      containers:
        - args:
            - redis-server
            - --requirepass
            - ""
          image: redis:latest
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: redis-data
      restartPolicy: Always
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: redis-data
  name: redis-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-job
spec:
  template:
    spec:
      containers:
        - name: migrate
          image: dilyara4949/flight-booking-image:latest
          command: ["sh", "-c", "migrate -path ./internal/database/postgres/migration -database postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)?sslmode=disable up"]
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "12345"
            - name: POSTGRES_DB
              value: "postgres"
      restartPolicy: Never
  backoffLimit: 4
